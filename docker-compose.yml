version: '3.8'

services:
  # PHP IMAGE
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: webapp-app
    platform: linux/x86_64
    restart: always
    working_dir: /var/www/src
    volumes:
      - ./src:/var/www/src
    extra_hosts:
          - 'host.docker.internal:host-gateway'
    networks:
      - appnet

  # NGINX IMAGE
  nginx:
    image: nginx:stable-alpine
    container_name: webapp-nginx
    restart: always
    working_dir: /var/www/src
    ports:
      - ${APP_PORT}:80
      - 443:443
    volumes:
      - ./src:/var/www/src
      - ./docker/nginx/conf.d:/etc/nginx/conf.d/
      - ./docker/certbot/www:/var/www/certbot/:ro
      - ./docker/certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - app
      - db
    networks:
      - appnet

  # LETSENCRYPT
  certbot:
    image: certbot/certbot:latest
    container_name: webapp-certbot
    volumes:
      - ./docker/certbot/www/:/var/www/certbot/:rw
      - ./docker/certbot/conf/:/etc/letsencrypt/:rw

  # REDIS
  redis:
      image: redis:alpine
      container_name: webapp-redis
      command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
      volumes:
      - ./docker/redis/data:/data
      ports:
        - "6379:6379"
      networks:
        - appnet

  # MYSQL IMAGE
  db:
    image: mysql:${MYSQL_VERSION}
    container_name: webapp-mysql
    platform: linux/x86_64
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - ${DB_PORT}:3306
    volumes:
      - ./docker/db/mysql:/var/lib/mysql
    networks:
      - appnet

  # PHPMyAdmin IMAGE
  myadmin:
    image: phpmyadmin/phpmyadmin
    container_name: webapp-phpmyadmin
    restart: always
    ports:
      - ${PMA_PORT}:80
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      UPLOAD_LIMIT: ${PMA_UPLOAD_LIMIT}
      MEMORY_LIMIT: ${PMA_MEMORY_LIMIT}
      MAX_EXECUTION_TIME: ${PMA_MAX_EXECUTION_TIME}
    depends_on:
      - db
    networks:
      - appnet

networks:
  appnet:
    driver: bridge
